{"version":3,"file":"useTabbar-C-OnZO8z.js","sources":["../../src/utils/composables/useTabbar.ts"],"sourcesContent":["import type { RouteLocationRaw } from 'vue-router'\nimport useSettingsStore from '@/store/modules/settings'\nimport useTabbarStore from '@/store/modules/tabbar'\nimport Message from 'vue-m-message'\n\nexport default function useTabbar() {\n  const route = useRoute()\n  const router = useRouter()\n\n  const settingsStore = useSettingsStore()\n  const tabbarStore = useTabbarStore()\n\n  function getId() {\n    return settingsStore.settings.tabbar.mergeTabsBy === 'activeMenu' ? (route.meta.activeMenu ?? route.fullPath) : route.fullPath\n  }\n\n  function open(to: RouteLocationRaw) {\n    const index = tabbarStore.list.findIndex(item => item.tabId === getId())\n    tabbarStore.$patch({\n      leaveIndex: index,\n    })\n    router.push(to)\n  }\n\n  function go(delta: number) {\n    const tabId = getId()\n    router.go(delta)\n    tabbarStore.remove(tabId)\n  }\n\n  function close(to: RouteLocationRaw) {\n    const tabId = getId()\n    router.push(to).then(() => {\n      tabbarStore.remove(tabId)\n    })\n  }\n\n  function closeById(tabId = getId()) {\n    const activedTabId = getId()\n    if (tabbarStore.list.some(item => item.tabId === tabId)) {\n      if (tabbarStore.list.length > 1) {\n        // 如果关闭的标签正好是当前路由\n        if (tabId === activedTabId) {\n          const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n          if (index < tabbarStore.list.length - 1) {\n            close(tabbarStore.list[index + 1].fullPath)\n          }\n          else {\n            close(tabbarStore.list[index - 1].fullPath)\n          }\n        }\n        else {\n          tabbarStore.remove(tabId)\n        }\n      }\n      else {\n        Message.error('当前只有一个标签页，已阻止关闭', {\n          zIndex: 2000,\n        })\n      }\n    }\n    else {\n      Message.error('关闭的页面不存在', {\n        zIndex: 2000,\n      })\n    }\n  }\n\n  /**\n   * 关闭两侧标签页\n   */\n  function closeOtherSide(tabId = getId()) {\n    const activedTabId = getId()\n    // 如果操作的是非当前路由标签页，则先跳转到指定路由标签页\n    if (tabId !== activedTabId) {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      router.push(tabbarStore.list[index].fullPath)\n    }\n    tabbarStore.removeOtherSide(tabId)\n  }\n\n  /**\n   * 关闭左侧标签页\n   */\n  function closeLeftSide(tabId = getId()) {\n    const activedTabId = getId()\n    // 如果操作的是非当前路由标签页，需要判断当前标签页是否在指定标签页左侧，如果是则先跳转到指定路由标签页\n    if (tabId !== activedTabId) {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      const activedIndex = tabbarStore.list.findIndex(item => item.tabId === activedTabId)\n      if (activedIndex < index) {\n        router.push(tabbarStore.list[index].fullPath)\n      }\n    }\n    tabbarStore.removeLeftSide(tabId)\n  }\n\n  /**\n   * 关闭右侧标签页\n   */\n  function closeRightSide(tabId = getId()) {\n    const activedTabId = getId()\n    // 如果操作的是非当前路由标签页，需要判断当前标签页是否在指定标签页右侧，如果是则先跳转到指定路由标签页\n    if (tabId !== activedTabId) {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      const activedIndex = tabbarStore.list.findIndex(item => item.tabId === activedTabId)\n      if (activedIndex > index) {\n        router.push(tabbarStore.list[index].fullPath)\n      }\n    }\n    tabbarStore.removeRightSide(tabId)\n  }\n\n  /**\n   * 校验指定标签两侧是否有可关闭的标签\n   */\n  function checkCloseOtherSide(tabId = getId()) {\n    return tabbarStore.list.some((item) => {\n      return !item.isPermanent && !item.isPin && item.tabId !== tabId\n    })\n  }\n\n  /**\n   * 校验指定标签左侧是否有可关闭的标签\n   */\n  function checkCloseLeftSide(tabId = getId()) {\n    let flag = true\n    if (tabId === tabbarStore.list[0]?.tabId) {\n      flag = false\n    }\n    else {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      flag = tabbarStore.list.some((item, i) => {\n        return i < index && !item.isPermanent && !item.isPin && item.tabId !== tabId\n      })\n    }\n    return flag\n  }\n\n  /**\n   * 校验指定标签右侧是否有可关闭的标签\n   */\n  function checkCloseRightSide(tabId = getId()) {\n    let flag = true\n    if (tabId === tabbarStore.list.at(-1)?.tabId) {\n      flag = false\n    }\n    else {\n      const index = tabbarStore.list.findIndex(item => item.tabId === tabId)\n      flag = tabbarStore.list.some((item, i) => {\n        return i >= index && !item.isPermanent && !item.isPin && item.tabId !== tabId\n      })\n    }\n    return flag\n  }\n\n  return {\n    getId,\n    open,\n    go,\n    close,\n    closeById,\n    closeOtherSide,\n    closeLeftSide,\n    closeRightSide,\n    checkCloseOtherSide,\n    checkCloseLeftSide,\n    checkCloseRightSide,\n  }\n}\n"],"names":["useTabbar","route","useRoute","router","useRouter","settingsStore","useSettingsStore","tabbarStore","useTabbarStore","getId","open","to","index","item","go","delta","tabId","close","closeById","activedTabId","Message","closeOtherSide","closeLeftSide","closeRightSide","checkCloseOtherSide","checkCloseLeftSide","flag","_a","i","checkCloseRightSide"],"mappings":"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"}