{"version":3,"file":"login-BKy4U-uX.js","sources":["../../src/components/ResetPasswordForm/index.vue","../../src/components/RegisterForm/index.vue","../../src/components/LoginForm/index.vue","../../src/assets/images/login-banner.png","../../src/views/login.vue"],"sourcesContent":["<i18n>\n{\n  \"zh-cn\": {\n    \"intro\": \"忘记密码了? 🔒\",\n    \"login\": \"去登录\",\n    \"form\": {\n      \"account\": \"用户名\",\n      \"captcha\": \"验证码\",\n      \"sendCaptcha\": \"发送验证码\",\n      \"newPassword\": \"新密码\",\n      \"confirm\": \"确认\"\n    },\n    \"rules\": {\n      \"account\": \"请输入用户名\",\n      \"captcha\": \"请输入验证码\",\n      \"newPassword\": \"请输入新密码\",\n      \"newPasswordLength\": \"密码长度为6到18位\"\n    }\n  },\n  \"zh-tw\": {\n    \"intro\": \"忘記密碼了? 🔒\",\n    \"login\": \"去登錄\",\n    \"form\": {\n      \"account\": \"用戶名\",\n      \"captcha\": \"驗證碼\",\n      \"sendCaptcha\": \"發送驗證碼\",\n      \"newPassword\": \"新密碼\",\n      \"confirm\": \"確認\"\n    },\n    \"rules\": {\n      \"account\": \"請輸入用戶名\",\n      \"captcha\": \"請輸入驗證碼\",\n      \"newPassword\": \"請輸入新密碼\",\n      \"newPasswordLength\": \"密碼長度為6到18位\"\n    }\n  },\n  \"en\": {\n    \"intro\": \"Forgot password? 🔒\",\n    \"login\": \"Go to login\",\n    \"form\": {\n      \"account\": \"Account\",\n      \"captcha\": \"Captcha\",\n      \"sendCaptcha\": \"Send Captcha\",\n      \"newPassword\": \"New Password\",\n      \"confirm\": \"Confirm\"\n    },\n    \"rules\": {\n      \"account\": \"Please enter account\",\n      \"captcha\": \"Please enter captcha\",\n      \"newPassword\": \"Please enter new password\",\n      \"newPasswordLength\": \"The length of the password is 6 to 18 bits\"\n    }\n  }\n}\n</i18n>\n\n<script setup lang=\"ts\">\nimport type { FormInstance, FormRules } from 'element-plus'\nimport storage from '@/utils/storage'\nimport { ElMessage } from 'element-plus'\nimport { useI18n } from 'vue-i18n'\n\ndefineOptions({\n  name: 'ResetPasswordForm',\n})\n\nconst props = defineProps<{\n  account?: string\n}>()\n\nconst emits = defineEmits<{\n  onLogin: [account: string]\n  onResetPassword: [account: string]\n}>()\n\nconst { t } = useI18n()\n\nconst loading = ref(false)\n\nconst formRef = useTemplateRef<FormInstance>('formRef')\nconst form = ref({\n  account: props.account ?? storage.local.get('login_account') ?? '',\n  captcha: '',\n  newPassword: '',\n})\nconst rules = ref<FormRules>({\n  account: [\n    { required: true, trigger: 'blur', message: () => t('rules.account') },\n  ],\n  captcha: [\n    { required: true, trigger: 'blur', message: () => t('rules.captcha') },\n  ],\n  newPassword: [\n    { required: true, trigger: 'blur', message: () => t('rules.newPassword') },\n    { min: 6, max: 18, trigger: 'blur', message: () => t('rules.newPasswordLength') },\n  ],\n})\nfunction handleReset() {\n  ElMessage({\n    message: '重置密码仅提供界面演示，无实际功能，需开发者自行扩展',\n    type: 'info',\n  })\n  formRef.value?.validate((valid) => {\n    if (valid) {\n      // 这里编写业务代码\n      emits('onResetPassword', form.value.account)\n    }\n  })\n}\n</script>\n\n<template>\n  <ElForm ref=\"formRef\" :model=\"form\" :rules=\"rules\" class=\"min-h-500px w-full flex-col-stretch-center p-12\">\n    <h3 class=\"mb-8 text-xl color-[var(--el-text-color-primary)] font-bold\">\n      {{ t('intro') }}\n    </h3>\n    <div>\n      <ElFormItem prop=\"account\">\n        <ElInput v-model=\"form.account\" size=\"large\" :placeholder=\"t('form.account')\" type=\"text\" tabindex=\"1\">\n          <template #prefix>\n            <SvgIcon name=\"i-ri:user-3-fill\" />\n          </template>\n        </ElInput>\n      </ElFormItem>\n      <ElFormItem prop=\"captcha\">\n        <ElInput v-model=\"form.captcha\" size=\"large\" :placeholder=\"t('form.captcha')\" type=\"text\" tabindex=\"2\">\n          <template #prefix>\n            <SvgIcon name=\"i-ic:baseline-verified-user\" />\n          </template>\n          <template #append>\n            <ElButton>{{ t('form.sendCaptcha') }}</ElButton>\n          </template>\n        </ElInput>\n      </ElFormItem>\n      <ElFormItem prop=\"newPassword\">\n        <ElInput v-model=\"form.newPassword\" type=\"password\" size=\"large\" :placeholder=\"t('form.newPassword')\" tabindex=\"3\" show-password>\n          <template #prefix>\n            <SvgIcon name=\"i-ri:lock-2-fill\" />\n          </template>\n        </ElInput>\n      </ElFormItem>\n    </div>\n    <ElButton :loading=\"loading\" type=\"primary\" size=\"large\" style=\"width: 100%; margin-top: 20px;\" @click.prevent=\"handleReset\">\n      {{ t('form.confirm') }}\n    </ElButton>\n    <div class=\"mt-4 flex-center gap-2 text-sm color-[var(--el-text-color-secondary)]\">\n      <ElLink type=\"primary\" :underline=\"false\" @click=\"emits('onLogin', form.account)\">\n        {{ t('login') }}\n      </ElLink>\n    </div>\n  </ElForm>\n</template>\n","<i18n>\n{\n  \"zh-cn\": {\n    \"intro\": \"探索从这里开始! 🚀\",\n    \"hasAccount\": \"已经有帐号?\",\n    \"login\": \"去登录\",\n    \"form\": {\n      \"account\": \"用户名\",\n      \"captcha\": \"验证码\",\n      \"sendCaptcha\": \"发送验证码\",\n      \"password\": \"密码\",\n      \"checkPassword\": \"确认密码\",\n      \"register\": \"注册\"\n    },\n    \"rules\": {\n      \"account\": \"请输入用户名\",\n      \"captcha\": \"请输入验证码\",\n      \"password\": \"请输入密码\",\n      \"passwordLength\": \"密码长度为6到18位\",\n      \"checkPassword\": \"请再次输入密码\",\n      \"checkPasswordError\": \"两次输入的密码不一致\"\n    }\n  },\n  \"zh-tw\": {\n    \"intro\": \"探索從這裡開始! 🚀\",\n    \"hasAccount\": \"已有帳號?\",\n    \"login\": \"去登入\",\n    \"form\": {\n      \"account\": \"用戶名\",\n      \"captcha\": \"驗證碼\",\n      \"sendCaptcha\": \"發送驗證碼\",\n      \"password\": \"密碼\",\n      \"checkPassword\": \"確認密碼\",\n      \"register\": \"註冊\"\n    },\n    \"rules\": {\n      \"account\": \"請輸入用戶名\",\n      \"captcha\": \"請輸入驗證碼\",\n      \"password\": \"請輸入密碼\",\n      \"passwordLength\": \"密碼長度為6到18位\",\n      \"checkPassword\": \"請再次輸入密碼\",\n      \"checkPasswordError\": \"兩次輸入的密碼不一致\"\n    }\n  },\n  \"en\": {\n    \"intro\": \"Explore from here! 🚀\",\n    \"hasAccount\": \"Already have an account?\",\n    \"login\": \"Login\",\n    \"form\": {\n      \"account\": \"Account\",\n      \"captcha\": \"Captcha\",\n      \"sendCaptcha\": \"Send Captcha\",\n      \"password\": \"Password\",\n      \"checkPassword\": \"Check Password\",\n      \"register\": \"Register\"\n    },\n    \"rules\": {\n      \"account\": \"Please enter an account\",\n      \"captcha\": \"Please enter a captcha\",\n      \"password\": \"Please enter a password\",\n      \"passwordLength\": \"Password length is 6 to 18 bits\",\n      \"checkPassword\": \"Please enter the password again\",\n      \"checkPasswordError\": \"The two passwords entered are inconsistent\"\n    }\n  }\n}\n</i18n>\n\n<script setup lang=\"ts\">\nimport type { FormInstance, FormRules } from 'element-plus'\nimport { ElMessage } from 'element-plus'\nimport { useI18n } from 'vue-i18n'\n\ndefineOptions({\n  name: 'RegisterForm',\n})\n\nconst props = defineProps<{\n  account?: string\n}>()\n\nconst emits = defineEmits<{\n  onLogin: [account: string]\n  onRegister: [account: string]\n}>()\n\nconst { t } = useI18n()\n\nconst loading = ref(false)\n\nconst formRef = useTemplateRef<FormInstance>('formRef')\nconst form = ref({\n  account: props.account ?? '',\n  captcha: '',\n  password: '',\n  checkPassword: '',\n})\nconst rules = ref<FormRules>({\n  account: [\n    { required: true, trigger: 'blur', message: () => t('rules.account') },\n  ],\n  captcha: [\n    { required: true, trigger: 'blur', message: () => t('rules.captcha') },\n  ],\n  password: [\n    { required: true, trigger: 'blur', message: () => t('rules.password') },\n    { min: 6, max: 18, trigger: 'blur', message: () => t('rules.passwordLength') },\n  ],\n  checkPassword: [\n    { required: true, trigger: 'blur', message: () => t('rules.checkPassword') },\n    {\n      validator: (_rule, value, callback) => {\n        if (value !== form.value.password) {\n          callback(new Error(t('rules.checkPasswordError')))\n        }\n        else {\n          callback()\n        }\n      },\n    },\n  ],\n})\nfunction handleRegister() {\n  ElMessage({\n    message: '注册模块仅提供界面演示，无实际功能，需开发者自行扩展',\n    type: 'warning',\n  })\n  formRef.value?.validate((valid) => {\n    if (valid) {\n      // 这里编写业务代码\n      emits('onRegister', form.value.account)\n    }\n  })\n}\n</script>\n\n<template>\n  <ElForm ref=\"formRef\" :model=\"form\" :rules=\"rules\" class=\"min-h-500px w-full flex-col-stretch-center p-12\">\n    <h3 class=\"mb-8 text-xl color-[var(--el-text-color-primary)] font-bold\">\n      {{ t('intro') }}\n    </h3>\n    <div>\n      <ElFormItem prop=\"account\">\n        <ElInput v-model=\"form.account\" size=\"large\" :placeholder=\"t('form.account')\" tabindex=\"1\">\n          <template #prefix>\n            <SvgIcon name=\"i-ri:user-3-fill\" />\n          </template>\n        </ElInput>\n      </ElFormItem>\n      <ElFormItem prop=\"captcha\">\n        <ElInput v-model=\"form.captcha\" size=\"large\" :placeholder=\"t('form.captcha')\" tabindex=\"2\">\n          <template #prefix>\n            <SvgIcon name=\"i-ic:baseline-verified-user\" />\n          </template>\n          <template #append>\n            <ElButton>{{ t('form.sendCaptcha') }}</ElButton>\n          </template>\n        </ElInput>\n      </ElFormItem>\n      <ElFormItem prop=\"password\">\n        <ElInput v-model=\"form.password\" type=\"password\" size=\"large\" :placeholder=\"t('form.password')\" tabindex=\"3\" show-password>\n          <template #prefix>\n            <SvgIcon name=\"i-ri:lock-2-fill\" />\n          </template>\n        </ElInput>\n      </ElFormItem>\n      <ElFormItem prop=\"checkPassword\">\n        <ElInput v-model=\"form.checkPassword\" type=\"password\" size=\"large\" :placeholder=\"t('form.checkPassword')\" tabindex=\"4\" show-password>\n          <template #prefix>\n            <SvgIcon name=\"i-ri:lock-2-fill\" />\n          </template>\n        </ElInput>\n      </ElFormItem>\n    </div>\n    <ElButton :loading=\"loading\" type=\"primary\" size=\"large\" style=\"width: 100%; margin-top: 20px;\" @click.prevent=\"handleRegister\">\n      {{ t('form.register') }}\n    </ElButton>\n    <div class=\"mt-4 flex-center gap-2 text-sm color-[var(--el-text-color-secondary)]\">\n      {{ t('hasAccount') }}\n      <ElLink type=\"primary\" :underline=\"false\" @click=\"emits('onLogin', form.account)\">\n        {{ t('login') }}\n      </ElLink>\n    </div>\n  </ElForm>\n</template>\n","<i18n>\n{\n  \"zh-cn\": {\n    \"accountLogin\": \"账号密码登录\",\n    \"qrcodeLogin\": \"扫码登录\",\n    \"intro\": \"欢迎使用 {title} ! 👋🏻\",\n    \"remember\": \"记住我\",\n    \"forget\": \"忘记密码了?\",\n    \"noAccount\": \"还没有帐号?\",\n    \"register\": \"注册新帐号\",\n    \"wechatQrcode\": \"请使用微信扫码登录\",\n    \"testLogin\": \"演示账号一键登录\",\n    \"form\": {\n      \"account\": \"用户名\",\n      \"password\": \"密码\",\n      \"login\": \"登录\"\n    },\n    \"rules\": {\n      \"account\": \"请输入用户名\",\n      \"password\": \"请输入密码\",\n      \"passwordLength\": \"密码长度为6到18位\"\n    }\n  },\n  \"zh-tw\": {\n    \"accountLogin\": \"帳號密碼登入\",\n    \"qrcodeLogin\": \"掃碼登入\",\n    \"intro\": \"歡迎使用 {title} ! 👋🏻\",\n    \"remember\": \"記住我\",\n    \"forget\": \"忘記密碼了?\",\n    \"noAccount\": \"還沒有帳號?\",\n    \"register\": \"註冊新帳號\",\n    \"wechatQrcode\": \"請使用微信掃碼登入\",\n    \"testLogin\": \"演示帳號一键登入\",\n    \"form\": {\n      \"account\": \"用戶名\",\n      \"password\": \"密碼\",\n      \"login\": \"登入\"\n    },\n    \"rules\": {\n      \"account\": \"請輸入用戶名\",\n      \"password\": \"請輸入密碼\",\n      \"passwordLength\": \"密碼長度為6到18位\"\n    }\n  },\n  \"en\": {\n    \"accountLogin\": \"Account Login\",\n    \"qrcodeLogin\": \"Scan Login\",\n    \"intro\": \"Welcome to {title} ! 👋🏻\",\n    \"remember\": \"Remember Me\",\n    \"forget\": \"Forget Password?\",\n    \"noAccount\": \"No Account?\",\n    \"register\": \"Register New Account\",\n    \"wechatQrcode\": \"Please use WeChat scan login\",\n    \"testLogin\": \"Demo Account One-click Login\",\n    \"form\": {\n      \"account\": \"Account\",\n      \"password\": \"Password\",\n      \"login\": \"Login\"\n    },\n    \"rules\": {\n      \"account\": \"Please enter the account\",\n      \"password\": \"Please enter the password\",\n      \"passwordLength\": \"Password length is 6 to 18 bits\"\n    }\n  }\n}\n</i18n>\n\n<script setup lang=\"ts\">\nimport type { FormInstance, FormRules } from 'element-plus'\nimport useUserStore from '@/store/modules/user'\nimport storage from '@/utils/storage'\nimport { useI18n } from 'vue-i18n'\n\ndefineOptions({\n  name: 'LoginForm',\n})\n\nconst props = defineProps<{\n  account?: string\n}>()\n\nconst emits = defineEmits<{\n  onLogin: [account: string]\n  onRegister: [account: string]\n  onResetPassword: [account: string]\n}>()\n\nconst { t } = useI18n()\nconst userStore = useUserStore()\n\nconst title = import.meta.env.VITE_APP_TITLE\nconst loading = ref(false)\n\n// 登录方式，default 账号密码登录，qrcode 扫码登录\nconst type = ref('default')\nconst formRef = useTemplateRef<FormInstance>('formRef')\nconst form = ref({\n  account: props.account ?? storage.local.get('login_account') ?? '',\n  password: '',\n  remember: storage.local.has('login_account'),\n})\nconst rules = ref<FormRules>({\n  account: [\n    { required: true, trigger: 'blur', message: () => t('rules.account') },\n  ],\n  password: [\n    { required: true, trigger: 'blur', message: () => t('rules.password') },\n    { min: 6, max: 18, trigger: 'blur', message: () => t('rules.passwordLength') },\n  ],\n})\nfunction handleLogin() {\n  formRef.value?.validate((valid) => {\n    if (valid) {\n      loading.value = true\n      userStore.login(form.value).then(() => {\n        if (form.value.remember) {\n          storage.local.set('login_account', form.value.account)\n        }\n        else {\n          storage.local.remove('login_account')\n        }\n        emits('onLogin', form.value.account)\n      }).finally(() => {\n        loading.value = false\n      })\n    }\n  })\n}\n\nfunction testAccount(account: string) {\n  form.value.account = account\n  form.value.password = '123456'\n  handleLogin()\n}\n</script>\n\n<template>\n  <ElForm ref=\"formRef\" :model=\"form\" :rules=\"rules\" class=\"min-h-500px w-full flex-col-stretch-center p-12\">\n    <div class=\"mb-6\">\n      <HTabList\n        v-model=\"type\" :options=\"[\n          { label: t('accountLogin'), value: 'default' },\n          { label: t('qrcodeLogin'), value: 'qrcode' },\n        ]\"\n      />\n    </div>\n    <template v-if=\"type === 'default'\">\n      <h3 class=\"mb-8 text-xl color-[var(--el-text-color-primary)] font-bold\">\n        {{ t('intro', { title }) }}\n      </h3>\n      <div>\n        <ElFormItem prop=\"account\">\n          <ElInput v-model=\"form.account\" size=\"large\" :placeholder=\"t('form.account')\" type=\"text\" tabindex=\"1\">\n            <template #prefix>\n              <SvgIcon name=\"i-ri:user-3-fill\" />\n            </template>\n          </ElInput>\n        </ElFormItem>\n        <ElFormItem prop=\"password\">\n          <ElInput v-model=\"form.password\" type=\"password\" size=\"large\" :placeholder=\"t('form.password')\" tabindex=\"2\" show-password @keyup.enter=\"handleLogin\">\n            <template #prefix>\n              <SvgIcon name=\"i-ri:lock-2-fill\" />\n            </template>\n          </ElInput>\n        </ElFormItem>\n      </div>\n      <div class=\"mb-4 flex-center-between\">\n        <ElCheckbox v-model=\"form.remember\">\n          {{ t('remember') }}\n        </ElCheckbox>\n        <ElLink type=\"primary\" :underline=\"false\" @click=\"emits('onResetPassword', form.account)\">\n          {{ t('forget') }}\n        </ElLink>\n      </div>\n      <ElButton :loading=\"loading\" type=\"primary\" size=\"large\" style=\"width: 100%;\" @click.prevent=\"handleLogin\">\n        {{ t('form.login') }}\n      </ElButton>\n      <div class=\"mt-4 flex-center gap-2 text-sm color-[var(--el-text-color-secondary)]\">\n        {{ t('noAccount') }}\n        <ElLink type=\"primary\" :underline=\"false\" @click=\"emits('onRegister', form.account)\">\n          {{ t('register') }}\n        </ElLink>\n      </div>\n    </template>\n    <template v-else-if=\"type === 'qrcode'\">\n      <div class=\"flex-col-center\">\n        <el-image src=\"https://s2.loli.net/2024/04/26/GsahtuIZ9XOg5jr.png\" class=\"h-[250px] w-[250px]\" />\n        <div class=\"mt-2 op-50\">\n          {{ t('wechatQrcode') }}\n        </div>\n      </div>\n    </template>\n    <div class=\"mt-4 text-center -mb-4\">\n      <ElDivider>{{ t('testLogin') }}</ElDivider>\n      <ElButton type=\"primary\" size=\"small\" plain @click=\"testAccount('admin')\">\n        admin\n      </ElButton>\n      <ElButton size=\"small\" plain @click=\"testAccount('test')\">\n        test\n      </ElButton>\n    </div>\n  </ElForm>\n</template>\n","export default \"__VITE_ASSET__BjSVEo1p__\"","<route lang=\"yaml\">\nmeta:\n  whiteList: true\n  title: 登录\n  constant: true\n  layout: false\n</route>\n\n<script setup lang=\"ts\">\nimport Copyright from '@/layouts/components/Copyright/index.vue'\nimport ColorScheme from '@/layouts/components/Topbar/Toolbar/ColorScheme/index.vue'\nimport I18n from '@/layouts/components/Topbar/Toolbar/I18n/index.vue'\nimport useSettingsStore from '@/store/modules/settings'\n\ndefineOptions({\n  name: 'Login',\n})\n\nconst route = useRoute()\nconst router = useRouter()\nconst settingsStore = useSettingsStore()\n\nconst layoutAlign = ref<'left' | 'center' | 'right'>('center')\nconst redirect = ref(route.query.redirect?.toString() ?? settingsStore.settings.home.fullPath)\nconst account = ref<string>()\n// 表单类型\nconst formType = ref<'login' | 'register' | 'resetPassword'>('login')\n</script>\n\n<template>\n  <div class=\"bg-banner\" />\n  <div class=\"absolute right-4 top-4 z-1 flex-center rounded-full bg-[var(--g-container-bg)] p-1 text-base ring-1 ring-stone-2 dark-ring-stone-8\">\n    <HDropdownMenu\n      v-if=\"settingsStore.mode === 'pc'\"\n      :items=\"[[\n        { label: '左侧布局', disabled: layoutAlign === 'left', handle: () => { layoutAlign = 'left' } },\n        { label: '居中布局', disabled: layoutAlign === 'center', handle: () => { layoutAlign = 'center' } },\n        { label: '右侧布局', disabled: layoutAlign === 'right', handle: () => { layoutAlign = 'right' } },\n      ]]\" class=\"cursor-pointer rounded-full p-2 hover-bg-[var(--g-bg)]\"\n    >\n      <SvgIcon\n        :name=\"{\n          left: 'i-icon-park-outline:left-bar',\n          center: 'i-icon-park-outline:square',\n          right: 'i-icon-park-outline:right-bar',\n        }[layoutAlign]\"\n      />\n    </HDropdownMenu>\n    <I18n v-if=\"settingsStore.settings.toolbar.i18n\" class=\"rounded-full hover-bg-[var(--g-bg)]\" />\n    <ColorScheme v-if=\"settingsStore.settings.toolbar.colorScheme\" class=\"rounded-full hover-bg-[var(--g-bg)]\" />\n  </div>\n  <div class=\"login-box\" :class=\"layoutAlign\">\n    <div class=\"login-banner\">\n      <img src=\"@/assets/images/logo.png\" class=\"absolute left-4 top-4 h-30px rounded ring ring-stone-2 dark-ring-stone-8\">\n      <img src=\"@/assets/images/login-banner.png\" class=\"banner\">\n      <Copyright v-if=\"settingsStore.mode === 'pc' && ['left', 'right'].includes(layoutAlign)\" />\n    </div>\n    <div class=\"login-form flex-col-center\">\n      <Transition name=\"fade\" mode=\"out-in\">\n        <LoginForm\n          v-if=\"formType === 'login'\"\n          :account\n          @on-login=\"router.push(redirect)\"\n          @on-register=\"(account) => { formType = 'register'; account = account }\"\n          @on-reset-password=\"(account) => { formType = 'resetPassword'; account = account }\"\n        />\n        <RegisterForm\n          v-else-if=\"formType === 'register'\"\n          :account\n          @on-register=\"(account) => { formType = 'login'; account = account }\"\n          @on-login=\"formType = 'login'\"\n        />\n        <ResetPasswordForm\n          v-else-if=\"formType === 'resetPassword'\"\n          :account\n          @on-reset-password=\"(account) => { formType = 'login'; account = account }\"\n          @on-login=\"formType = 'login'\"\n        />\n      </Transition>\n    </div>\n  </div>\n  <Copyright v-if=\"settingsStore.mode === 'mobile' || layoutAlign === 'center'\" />\n</template>\n\n<style scoped>\n.bg-banner {\n  position: fixed;\n  z-index: 0;\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle at center, var(--g-container-bg), var(--g-bg));\n}\n\n[data-mode=\"mobile\"] {\n  .login-box {\n    position: relative;\n    flex-direction: column;\n    justify-content: start;\n    width: 100%;\n\n    .login-banner {\n      width: 100%;\n      padding: 20px 0;\n\n      .banner {\n        position: relative;\n        top: inherit;\n        right: inherit;\n        display: inherit;\n        width: 100%;\n        max-width: 375px;\n        margin: 0 auto;\n        transform: translateY(0);\n      }\n    }\n\n    .login-form {\n      width: 100%;\n    }\n  }\n\n  .copyright {\n    position: relative;\n  }\n}\n\n.login-box {\n  position: absolute;\n  display: flex;\n  overflow: hidden;\n  background-color: var(--g-container-bg);\n\n  [data-mode=\"pc\"] & {\n    &.center {\n      top: 50%;\n      left: 50%;\n      border-radius: 10px;\n      box-shadow: var(--el-box-shadow);\n      transform: translateX(-50%) translateY(-50%);\n    }\n\n    &.left,\n    &.right {\n      width: 100%;\n      height: 100%;\n\n      .login-banner {\n        flex: 1;\n\n        .banner {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          width: 50%;\n          height: 50%;\n          object-fit: contain;\n          transform: translateX(-50%) translateY(-50%);\n        }\n      }\n    }\n\n    &.left {\n      flex-direction: row-reverse;\n    }\n  }\n\n  .login-banner {\n    position: relative;\n    width: 450px;\n    overflow: hidden;\n    background-color: var(--g-bg);\n\n    .banner {\n      position: absolute;\n      top: 50%;\n      width: 100%;\n      transform: translateY(-50%);\n    }\n  }\n\n  .login-form {\n    width: 500px;\n    transition: height 0.15s ease;\n  }\n}\n\n.copyright {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 20px;\n  margin: 0;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.15s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"names":["props","__props","emits","__emit","t","useI18n","loading","ref","formRef","useTemplateRef","form","storage","rules","handleReset","ElMessage","_a","valid","_rule","value","callback","handleRegister","userStore","useUserStore","title","type","handleLogin","testAccount","account","_imports_1","route","useRoute","router","useRouter","settingsStore","useSettingsStore","layoutAlign","redirect","formType"],"mappings":"s3BAkEA,MAAMA,EAAQC,EAIRC,EAAQC,EAKR,CAAE,EAAAC,GAAMC,IAERC,EAAUC,EAAI,EAAK,EAEnBC,EAAUC,EAA6B,SAAS,EAChDC,EAAOH,EAAI,CACf,QAASP,EAAM,SAAWW,EAAQ,MAAM,IAAI,eAAe,GAAK,GAChE,QAAS,GACT,YAAa,EAAA,CACd,EACKC,EAAQL,EAAe,CAC3B,QAAS,CACP,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMH,EAAE,eAAe,CAAE,CACvE,EACA,QAAS,CACP,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMA,EAAE,eAAe,CAAE,CACvE,EACA,YAAa,CACX,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMA,EAAE,mBAAmB,CAAE,EACzE,CAAE,IAAK,EAAG,IAAK,GAAI,QAAS,OAAQ,QAAS,IAAMA,EAAE,yBAAyB,CAAE,CAClF,CAAA,CACD,EACD,SAASS,GAAc,OACXC,EAAA,CACR,QAAS,6BACT,KAAM,MAAA,CACP,GACOC,EAAAP,EAAA,QAAA,MAAAO,EAAO,SAAUC,GAAU,CAC7BA,GAEId,EAAA,kBAAmBQ,EAAK,MAAM,OAAO,CAC7C,EAEJ,2jHC/BA,MAAMV,EAAQC,EAIRC,EAAQC,EAKR,CAAE,EAAAC,GAAMC,IAERC,EAAUC,EAAI,EAAK,EAEnBC,EAAUC,EAA6B,SAAS,EAChDC,EAAOH,EAAI,CACf,QAASP,EAAM,SAAW,GAC1B,QAAS,GACT,SAAU,GACV,cAAe,EAAA,CAChB,EACKY,EAAQL,EAAe,CAC3B,QAAS,CACP,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMH,EAAE,eAAe,CAAE,CACvE,EACA,QAAS,CACP,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMA,EAAE,eAAe,CAAE,CACvE,EACA,SAAU,CACR,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMA,EAAE,gBAAgB,CAAE,EACtE,CAAE,IAAK,EAAG,IAAK,GAAI,QAAS,OAAQ,QAAS,IAAMA,EAAE,sBAAsB,CAAE,CAC/E,EACA,cAAe,CACb,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMA,EAAE,qBAAqB,CAAE,EAC3E,CACE,UAAW,CAACa,EAAOC,EAAOC,IAAa,CACjCD,IAAUR,EAAK,MAAM,SACvBS,EAAS,IAAI,MAAMf,EAAE,0BAA0B,CAAC,CAAC,EAGxCe,GAEb,CACF,CACF,CAAA,CACD,EACD,SAASC,GAAiB,OACdN,EAAA,CACR,QAAS,6BACT,KAAM,SAAA,CACP,GACOC,EAAAP,EAAA,QAAA,MAAAO,EAAO,SAAUC,GAAU,CAC7BA,GAEId,EAAA,aAAcQ,EAAK,MAAM,OAAO,CACxC,EAEJ,+qJCvDA,MAAMV,EAAQC,EAIRC,EAAQC,EAMR,CAAE,EAAAC,GAAMC,IACRgB,EAAYC,KAEZC,EAAQ,sBACRjB,EAAUC,EAAI,EAAK,EAGnBiB,EAAOjB,EAAI,SAAS,EACpBC,EAAUC,EAA6B,SAAS,EAChDC,EAAOH,EAAI,CACf,QAASP,EAAM,SAAWW,EAAQ,MAAM,IAAI,eAAe,GAAK,GAChE,SAAU,GACV,SAAUA,EAAQ,MAAM,IAAI,eAAe,CAAA,CAC5C,EACKC,EAAQL,EAAe,CAC3B,QAAS,CACP,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMH,EAAE,eAAe,CAAE,CACvE,EACA,SAAU,CACR,CAAE,SAAU,GAAM,QAAS,OAAQ,QAAS,IAAMA,EAAE,gBAAgB,CAAE,EACtE,CAAE,IAAK,EAAG,IAAK,GAAI,QAAS,OAAQ,QAAS,IAAMA,EAAE,sBAAsB,CAAE,CAC/E,CAAA,CACD,EACD,SAASqB,GAAc,QACbV,EAAAP,EAAA,QAAA,MAAAO,EAAO,SAAUC,GAAU,CAC7BA,IACFV,EAAQ,MAAQ,GAChBe,EAAU,MAAMX,EAAK,KAAK,EAAE,KAAK,IAAM,CACjCA,EAAK,MAAM,SACbC,EAAQ,MAAM,IAAI,gBAAiBD,EAAK,MAAM,OAAO,EAG7CC,EAAA,MAAM,OAAO,eAAe,EAEhCT,EAAA,UAAWQ,EAAK,MAAM,OAAO,CAAA,CACpC,EAAE,QAAQ,IAAM,CACfJ,EAAQ,MAAQ,EAAA,CACjB,EACH,EAEJ,CAEA,SAASoB,EAAYC,EAAiB,CACpCjB,EAAK,MAAM,QAAUiB,EACrBjB,EAAK,MAAM,SAAW,SACVe,GACd,+tJCtIA,MAAeG,GAAA,GAAA,IAAA,IAAA,4BAAA,YAAA,GAAA,EAAA,uQCkBf,MAAMC,EAAQC,KACRC,EAASC,KACTC,EAAgBC,KAEhBC,EAAc5B,EAAiC,QAAQ,EACvD6B,EAAW7B,IAAIQ,EAAAc,EAAM,MAAM,WAAZ,YAAAd,EAAsB,aAAckB,EAAc,SAAS,KAAK,QAAQ,EACvFN,EAAUpB,IAEV8B,EAAW9B,EAA4C,OAAO"}