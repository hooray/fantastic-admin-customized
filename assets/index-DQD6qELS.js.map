{"version":3,"file":"index-DQD6qELS.js","sources":["../../src/layouts/components/Preferences/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport useSettingsStore from '@/store/modules/settings'\nimport useUserStore from '@/store/modules/user'\nimport eventBus from '@/utils/eventBus'\nimport Sortable from 'sortablejs'\nimport themes from '../../../../themes'\n\ndefineOptions({\n  name: 'Preferences',\n})\n\nconst settingsStore = useSettingsStore()\nconst userStore = useUserStore()\n\nconst isShow = ref(false)\n\nconst themeList = computed(() => {\n  return Object.keys(themes).map((key) => {\n    return {\n      label: key,\n      value: (themes as any)[key],\n    }\n  }).filter((item) => {\n    return item.value['color-scheme'] === settingsStore.currentColorScheme\n  })\n})\n\nconst toolbarLayoutRef = useTemplateRef('toolbarLayoutRef')\nwatch(() => toolbarLayoutRef.value, (val) => {\n  if (val) {\n    // eslint-disable-next-line no-new\n    new Sortable(val, {\n      animation: 200,\n      ghostClass: 'op-30',\n      draggable: '.draggable',\n      filter: '.no-drag',\n      onUpdate: (e) => {\n        if (e.newIndex !== undefined && e.oldIndex !== undefined) {\n          userStore.preferences.toolbar && userStore.preferences.toolbar.layout && userStore.preferences.toolbar.layout.splice(e.newIndex, 0, userStore.preferences.toolbar.layout.splice(e.oldIndex, 1)[0])\n        }\n      },\n    })\n  }\n})\n\nonMounted(() => {\n  eventBus.on('global-preferences-toggle', () => {\n    isShow.value = !isShow.value\n  })\n})\n\nasync function handleReset() {\n  userStore.updatePreferences()\n  location.reload()\n}\n</script>\n\n<template>\n  <HSlideover v-model=\"isShow\" title=\"偏好设置\" :side=\"settingsStore.settings.app.direction === 'ltr' ? 'right' : 'left'\">\n    <div\n      v-if=\"\n        userStore.preferences.app?.hasOwnProperty('colorScheme')\n          || (userStore.preferences.app?.hasOwnProperty('lightTheme') && userStore.preferences.app?.hasOwnProperty('darkTheme'))\n      \"\n    >\n      <div class=\"divider\">\n        颜色主题风格\n      </div>\n      <div v-if=\"userStore.preferences.app?.hasOwnProperty('colorScheme')\" class=\"flex items-center justify-center pb-4\">\n        <HTabList\n          v-model=\"userStore.preferences.app.colorScheme\"\n          :options=\"[\n            { icon: 'i-ri:sun-line', label: '明亮', value: 'light' },\n            { icon: 'i-ri:moon-line', label: '暗黑', value: 'dark' },\n            { icon: 'i-codicon:color-mode', label: '系统', value: '' },\n          ]\"\n          class=\"w-60\"\n        />\n      </div>\n      <div v-if=\"userStore.preferences.app?.hasOwnProperty('lightTheme') && userStore.preferences.app?.hasOwnProperty('darkTheme')\" class=\"themes\">\n        <div v-for=\"item in themeList\" :key=\"item.label\" class=\"theme\" :class=\"{ active: settingsStore.currentColorScheme === 'dark' ? userStore.preferences.app.darkTheme === item.label : userStore.preferences.app.lightTheme === item.label }\" @click=\"settingsStore.currentColorScheme === 'dark' ? userStore.preferences.app?.hasOwnProperty('darkTheme') && (userStore.preferences.app.darkTheme = item.label) : userStore.preferences.app?.hasOwnProperty('lightTheme') && (userStore.preferences.app.lightTheme = item.label)\">\n          <div class=\"content\" :style=\"`background-color: rgb(${item.value['--ui-primary']});`\" />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"settingsStore.mode === 'pc' && userStore.preferences.menu?.hasOwnProperty('mode')\">\n      <div class=\"divider\">\n        导航栏模式\n      </div>\n      <div class=\"menu-mode\">\n        <HTooltip text=\"侧边栏模式 (含主导航)\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-side\" :class=\"{ active: userStore.preferences.menu.mode === 'side' }\" @click=\"userStore.preferences.menu?.hasOwnProperty('mode') && (userStore.preferences.menu.mode = 'side')\">\n            <div class=\"mode-container\" />\n          </div>\n        </HTooltip>\n        <HTooltip text=\"顶部模式\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-head\" :class=\"{ active: userStore.preferences.menu.mode === 'head' }\" @click=\"userStore.preferences.menu?.hasOwnProperty('mode') && (userStore.preferences.menu.mode = 'head')\">\n            <div class=\"mode-container\" />\n          </div>\n        </HTooltip>\n        <HTooltip text=\"侧边栏模式 (不含主导航)\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-single\" :class=\"{ active: userStore.preferences.menu.mode === 'single' }\" @click=\"userStore.preferences.menu?.hasOwnProperty('mode') && (userStore.preferences.menu.mode = 'single')\">\n            <div class=\"mode-container\" />\n          </div>\n        </HTooltip>\n      </div>\n      <div class=\"menu-mode\">\n        <HTooltip text=\"侧边栏精简模式\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-only-side\" :class=\"{ active: userStore.preferences.menu.mode === 'only-side' }\" @click=\"userStore.preferences.menu?.hasOwnProperty('mode') && (userStore.preferences.menu.mode = 'only-side')\">\n            <div class=\"mode-container\" />\n          </div>\n        </HTooltip>\n        <HTooltip text=\"顶部精简模式\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-only-head\" :class=\"{ active: userStore.preferences.menu.mode === 'only-head' }\" @click=\"userStore.preferences.menu?.hasOwnProperty('mode') && (userStore.preferences.menu.mode = 'only-head')\">\n            <div class=\"mode-container\" />\n          </div>\n        </HTooltip>\n        <HTooltip text=\"侧边栏面板模式\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-side-panel\" :class=\"{ active: settingsStore.settings.menu.mode === 'side-panel' }\" @click=\"userStore.preferences.menu?.hasOwnProperty('mode') && (userStore.preferences.menu.mode = 'side-panel')\">\n            <div class=\"mode-container\" />\n          </div>\n        </HTooltip>\n        <HTooltip text=\"顶部面板模式\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-head-panel\" :class=\"{ active: settingsStore.settings.menu.mode === 'head-panel' }\" @click=\"userStore.preferences.menu?.hasOwnProperty('mode') && (userStore.preferences.menu.mode = 'head-panel')\">\n            <div class=\"mode-container\" />\n          </div>\n        </HTooltip>\n      </div>\n    </div>\n    <div v-if=\"settingsStore.mode === 'pc' && userStore.preferences.layout?.hasOwnProperty('widthMode')\">\n      <div class=\"divider\">\n        页宽模式\n      </div>\n      <div class=\"app-width-mode\">\n        <HTooltip text=\"自适应\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-adaption\" :class=\"{ active: userStore.preferences.layout.widthMode === 'adaption' }\" @click=\"userStore.preferences.layout?.hasOwnProperty('widthMode') && (userStore.preferences.layout.widthMode = 'adaption')\">\n            <SvgIcon name=\"i-ep:back\" class=\"left\" />\n            <SvgIcon name=\"i-ep:right\" class=\"right\" />\n          </div>\n        </HTooltip>\n        <HTooltip text=\"自适应 (有最小宽度)\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-adaption-min-width\" :class=\"{ active: userStore.preferences.layout.widthMode === 'adaption-min-width' }\" @click=\"userStore.preferences.layout?.hasOwnProperty('widthMode') && (userStore.preferences.layout.widthMode = 'adaption-min-width')\">\n            <SvgIcon name=\"i-ep:back\" class=\"left\" />\n            <SvgIcon name=\"i-ep:right\" class=\"right\" />\n          </div>\n        </HTooltip>\n        <HTooltip text=\"定宽居中\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-center\" :class=\"{ active: userStore.preferences.layout.widthMode === 'center' }\" @click=\"userStore.preferences.layout?.widthMode && (userStore.preferences.layout.widthMode = 'center')\" />\n        </HTooltip>\n        <HTooltip text=\"定宽居中 (有最大宽度)\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-center-max-width\" :class=\"{ active: userStore.preferences.layout.widthMode === 'center-max-width' }\" @click=\"userStore.preferences.layout?.widthMode && (userStore.preferences.layout.widthMode = 'center-max-width')\">\n            <SvgIcon name=\"i-ep:back\" class=\"left\" />\n            <SvgIcon name=\"i-ep:right\" class=\"right\" />\n          </div>\n        </HTooltip>\n      </div>\n    </div>\n    <div v-if=\"userStore.preferences.mainPage?.hasOwnProperty('enableTransition') || userStore.preferences.mainPage?.hasOwnProperty('transitionMode')\">\n      <div class=\"divider\">\n        页面切换动画\n      </div>\n      <div v-if=\"userStore.preferences.mainPage?.hasOwnProperty('enableTransition')\" class=\"flex items-center justify-center pb-4\">\n        <HToggle v-model=\"userStore.preferences.mainPage.enableTransition\" />\n      </div>\n      <div v-if=\"userStore.preferences.mainPage?.hasOwnProperty('transitionMode')\" class=\"transition-mode\">\n        <HTooltip text=\"淡入淡出\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-fade\" :class=\"{ active: userStore.preferences.mainPage.transitionMode === 'fade' }\" @click=\"userStore.preferences.mainPage?.hasOwnProperty('transitionMode') && (userStore.preferences.mainPage.transitionMode = 'fade')\" />\n        </HTooltip>\n        <HTooltip text=\"向左滑动\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-slide-left\" :class=\"{ active: userStore.preferences.mainPage.transitionMode === 'slide-left' }\" @click=\"userStore.preferences.mainPage?.hasOwnProperty('transitionMode') && (userStore.preferences.mainPage.transitionMode = 'slide-left')\" />\n        </HTooltip>\n        <HTooltip text=\"向右滑动\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-slide-right\" :class=\"{ active: userStore.preferences.mainPage.transitionMode === 'slide-right' }\" @click=\"userStore.preferences.mainPage?.hasOwnProperty('transitionMode') && (userStore.preferences.mainPage.transitionMode = 'slide-right')\" />\n        </HTooltip>\n        <HTooltip text=\"向上滑动\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-slide-top\" :class=\"{ active: userStore.preferences.mainPage.transitionMode === 'slide-top' }\" @click=\"userStore.preferences.mainPage?.hasOwnProperty('transitionMode') && (userStore.preferences.mainPage.transitionMode = 'slide-top')\" />\n        </HTooltip>\n        <HTooltip text=\"向下滑动\" placement=\"bottom\" :delay=\"500\">\n          <div class=\"mode mode-slide-bottom\" :class=\"{ active: userStore.preferences.mainPage.transitionMode === 'slide-bottom' }\" @click=\"userStore.preferences.mainPage?.hasOwnProperty('transitionMode') && (userStore.preferences.mainPage.transitionMode = 'slide-bottom')\" />\n        </HTooltip>\n      </div>\n    </div>\n    <div\n      v-if=\"\n        (userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('switchMainMenuAndPageJump'))\n          || (userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('subMenuUniqueOpened'))\n          || (userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('subMenuCollapse'))\n          || (userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('subMenuAutoCollapse'))\n          || (userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('enableSubMenuCollapseButton'))\n          || userStore.preferences.menu?.hasOwnProperty('isRounded')\n          || (userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('style'))\n      \"\n    >\n      <div class=\"divider\">\n        导航栏\n      </div>\n      <div v-if=\"userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('switchMainMenuAndPageJump')\" class=\"setting-item\">\n        <div class=\"label\">\n          主导航切换跳转\n          <HTooltip text=\"切换主导航时，页面自动跳转至该主导航下，次导航里第一个导航\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.menu.switchMainMenuAndPageJump\" :disabled=\"['single', 'only-side', 'only-head'].includes(userStore.preferences.menu?.mode!)\" />\n      </div>\n      <div v-if=\"userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('subMenuUniqueOpened')\" class=\"setting-item\">\n        <div class=\"label\">\n          次导航保持展开一个\n          <HTooltip text=\"次导航只保持单个菜单的展开\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.menu.subMenuUniqueOpened\" :disabled=\"['only-side', 'only-head'].includes(userStore.preferences.menu?.mode!)\" />\n      </div>\n      <div v-if=\"userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('subMenuCollapse')\" class=\"setting-item\">\n        <div class=\"label\">\n          次导航是否收起\n        </div>\n        <HToggle v-model=\"userStore.preferences.menu.subMenuCollapse\" :disabled=\"['only-side', 'only-head'].includes(userStore.preferences.menu?.mode!)\" />\n      </div>\n      <div v-if=\"userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('subMenuAutoCollapse')\" class=\"setting-item\">\n        <div class=\"label\">\n          次导航是否自动收起\n          <HTooltip text=\"次导航收起时，鼠标悬停会临时展开\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.menu.subMenuAutoCollapse\" :disabled=\"['only-side', 'only-head'].includes(userStore.preferences.menu?.mode!)\" />\n      </div>\n      <div v-if=\"settingsStore.mode === 'pc' && userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('enableSubMenuCollapseButton')\" class=\"setting-item\">\n        <div class=\"label\">\n          显示次导航展开/收起按钮\n        </div>\n        <HToggle v-model=\"userStore.preferences.menu.enableSubMenuCollapseButton\" :disabled=\"['only-side', 'only-head'].includes(userStore.preferences.menu?.mode!)\" />\n      </div>\n      <div v-if=\"userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.menu?.hasOwnProperty('style')\" class=\"setting-item\">\n        <div class=\"label\">\n          风格\n        </div>\n        <HCheckList\n          v-model=\"userStore.preferences.menu.style\" :options=\"[\n            { icon: 'i-jam:stop-sign', value: '' },\n            { icon: ['head', 'only-head', 'head-panel'].includes(userStore.preferences.menu?.mode!) ? 'i-ep:caret-top' : 'i-ep:caret-left', value: 'arrow' },\n            { icon: ['side', 'only-side', 'side-panel'].includes(userStore.preferences.menu?.mode!) ? 'i-tabler:minus-vertical' : 'i-tabler:minus', value: 'line' },\n            { icon: 'i-icon-park-outline:dot', value: 'dot' },\n          ]\"\n        />\n      </div>\n      <div v-if=\"userStore.preferences.menu?.hasOwnProperty('isRounded')\" class=\"setting-item\">\n        <div class=\"label\">\n          是否圆角\n        </div>\n        <HToggle v-model=\"userStore.preferences.menu.isRounded\" />\n      </div>\n    </div>\n    <div v-if=\"userStore.preferences.topbar?.hasOwnProperty('mode') || userStore.preferences.topbar?.hasOwnProperty('switchTabbarAndToolbar')\">\n      <div class=\"divider\">\n        顶栏\n      </div>\n      <div v-if=\"userStore.preferences.topbar?.hasOwnProperty('mode')\" class=\"setting-item\">\n        <div class=\"label\">\n          模式\n        </div>\n        <HCheckList\n          v-model=\"userStore.preferences.topbar.mode\" :options=\"[\n            { label: '静止', value: 'static' },\n            { label: '固定', value: 'fixed' },\n            { label: '粘性', value: 'sticky' },\n          ]\"\n        />\n      </div>\n      <div v-if=\"userStore.preferences.topbar?.hasOwnProperty('switchTabbarAndToolbar')\" class=\"setting-item\">\n        <div class=\"label\">\n          展示切换\n          <HTooltip text=\"切换标签栏和工具栏的展示顺序\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.topbar.switchTabbarAndToolbar\" :disabled=\"!userStore.preferences.tabbar?.enable\" />\n      </div>\n    </div>\n    <div\n      v-if=\"\n        userStore.preferences.tabbar?.hasOwnProperty('style')\n          || userStore.preferences.tabbar?.hasOwnProperty('enableIcon')\n          || userStore.preferences.tabbar?.hasOwnProperty('dblclickAction')\n          || userStore.preferences.tabbar?.hasOwnProperty('enableMemory')\n      \"\n    >\n      <div class=\"divider\">\n        标签栏\n      </div>\n      <div v-if=\"userStore.preferences.tabbar?.hasOwnProperty('style')\" class=\"setting-item\">\n        <div class=\"label\">\n          风格\n        </div>\n        <HCheckList\n          v-model=\"userStore.preferences.tabbar.style\" :options=\"[\n            { label: '默认', value: '' },\n            { label: '时尚', value: 'fashion' },\n            { label: '卡片', value: 'card' },\n            { label: '方块', value: 'square' },\n          ]\"\n        />\n      </div>\n      <div v-if=\"userStore.preferences.tabbar?.hasOwnProperty('enableIcon')\" class=\"setting-item\">\n        <div class=\"label\">\n          是否显示图标\n        </div>\n        <HToggle v-model=\"userStore.preferences.tabbar.enableIcon\" />\n      </div>\n      <div v-if=\"userStore.preferences.tabbar?.hasOwnProperty('dblclickAction')\" class=\"setting-item\">\n        <div class=\"label\">\n          标签页双击执行动作\n        </div>\n        <HSelect\n          v-model=\"userStore.preferences.tabbar.dblclickAction\" :options=\"[\n            { label: '刷新', value: 'reload' },\n            { label: '关闭', value: 'close' },\n            { label: '固定/取消固定', value: 'pin' },\n            { label: '最大化', value: 'maximize' },\n            { label: '新窗口打开', value: 'window' },\n          ]\"\n        />\n      </div>\n      <div v-if=\"userStore.preferences.tabbar?.hasOwnProperty('enableMemory')\" class=\"setting-item\">\n        <div class=\"label\">\n          是否启用记忆功能\n          <HTooltip text=\"非固定和非常驻的标签页将在本次会话窗口中始终存在，刷新浏览器或重新登录时不会丢失\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.tabbar.enableMemory\" />\n      </div>\n    </div>\n    <div\n      v-if=\"\n        userStore.preferences.toolbar?.hasOwnProperty('breadcrumb')\n          || userStore.preferences.toolbar?.hasOwnProperty('navSearch')\n          || userStore.preferences.toolbar?.hasOwnProperty('fullscreen')\n          || userStore.preferences.toolbar?.hasOwnProperty('pageReload')\n          || userStore.preferences.toolbar?.hasOwnProperty('colorScheme')\n          || userStore.preferences.toolbar?.hasOwnProperty('layout')\n      \"\n    >\n      <div class=\"divider\">\n        工具栏\n      </div>\n      <div v-if=\"settingsStore.mode === 'pc' && userStore.preferences.toolbar?.hasOwnProperty('breadcrumb')\" class=\"setting-item\">\n        <div class=\"label\">\n          面包屑导航\n        </div>\n        <HToggle v-model=\"userStore.preferences.toolbar.breadcrumb\" />\n      </div>\n      <div v-if=\"userStore.preferences.toolbar?.hasOwnProperty('navSearch')\" class=\"setting-item\">\n        <div class=\"label\">\n          导航搜索\n          <HTooltip text=\"对导航进行快捷搜索\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.toolbar.navSearch\" />\n      </div>\n      <div v-if=\"settingsStore.mode === 'pc' && userStore.preferences.toolbar?.hasOwnProperty('fullscreen')\" class=\"setting-item\">\n        <div class=\"label\">\n          全屏\n        </div>\n        <HToggle v-model=\"userStore.preferences.toolbar.fullscreen\" />\n      </div>\n      <div v-if=\"userStore.preferences.toolbar?.hasOwnProperty('pageReload')\" class=\"setting-item\">\n        <div class=\"label\">\n          页面刷新\n          <HTooltip text=\"使用框架内提供的刷新功能进行页面刷新\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.toolbar.pageReload\" />\n      </div>\n      <div v-if=\"userStore.preferences.toolbar?.hasOwnProperty('colorScheme')\" class=\"setting-item\">\n        <div class=\"label\">\n          颜色主题\n          <HTooltip text=\"可切换明亮/暗黑模式\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.toolbar.colorScheme\" />\n      </div>\n      <div v-if=\"userStore.preferences.toolbar?.hasOwnProperty('layout')\" ref=\"toolbarLayoutRef\" class=\"mx-4 my-2 flex items-center rounded-2 px-2 py-1 ring-1 ring-stone-2 dark-ring-stone-7\">\n        <span\n          v-for=\"tool in userStore.preferences.toolbar.layout\" :key=\"tool\" class=\"draggable flex-center p-1\" :class=\"{\n            'flex-1 text-stone-3 dark-text-stone-7 no-drag': tool === '->',\n            'cursor-ew-resize': tool !== '->',\n            'pointer-events-none w-0 op-0 p-0! no-drag': tool !== '->' && !settingsStore.settings.toolbar[tool],\n          }\"\n        >\n          <SvgIcon v-if=\"tool === 'favorites'\" name=\"i-uiw:star-off\" />\n          <SvgIcon v-if=\"tool === 'breadcrumb'\" name=\"i-ic:twotone-double-arrow\" :rotate=\"settingsStore.settings.app.direction === 'rtl' ? 180 : 0\" />\n          <SvgIcon v-if=\"tool === 'navSearch'\" name=\"i-ri:search-line\" />\n          <SvgIcon v-if=\"tool === 'notification'\" name=\"i-ri:notification-3-line\" />\n          <SvgIcon v-if=\"tool === 'i18n'\" name=\"i-ri:translate\" />\n          <SvgIcon v-if=\"tool === 'fullscreen'\" name=\"i-ri:fullscreen-line\" />\n          <SvgIcon v-if=\"tool === 'pageReload'\" name=\"i-iconoir:refresh-double\" />\n          <SvgIcon v-if=\"tool === 'colorScheme'\" name=\"i-ri:sun-line\" />\n          <span v-if=\"tool === '->'\" class=\"pointer-events-none text-sm\">布局调整</span>\n        </span>\n      </div>\n    </div>\n    <div\n      v-if=\"\n        settingsStore.mode === 'pc' && (\n          userStore.preferences.breadcrumb?.hasOwnProperty('style')\n          || (userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.breadcrumb?.hasOwnProperty('enableMainMenu'))\n        )\n      \"\n    >\n      <div class=\"divider\">\n        面包屑导航\n      </div>\n      <div v-if=\"userStore.preferences.breadcrumb?.hasOwnProperty('style')\" class=\"setting-item\">\n        <div class=\"label\">\n          风格\n        </div>\n        <HCheckList\n          v-model=\"userStore.preferences.breadcrumb.style\" :options=\"[\n            { label: '默认', value: '' },\n            { label: '现代', value: 'modern' },\n          ]\" :disabled=\"!userStore.preferences.toolbar?.breadcrumb\"\n        />\n      </div>\n      <div v-if=\"userStore.preferences.menu?.hasOwnProperty('mode') && userStore.preferences.breadcrumb?.hasOwnProperty('enableMainMenu')\" class=\"setting-item\">\n        <div class=\"label\">\n          是否显示主导航\n        </div>\n        <HToggle v-model=\"userStore.preferences.breadcrumb.enableMainMenu\" :disabled=\"['single'].includes(userStore.preferences.menu?.mode!)\" />\n      </div>\n    </div>\n    <div v-if=\"userStore.preferences.app?.hasOwnProperty('enableProgress') || userStore.preferences.app?.hasOwnProperty('enableColorAmblyopiaMode')\">\n      <div class=\"divider\">\n        其它\n      </div>\n      <div class=\"setting-item\">\n        <div class=\"label\">\n          载入进度条\n          <HTooltip text=\"该功能开启时，跳转路由会看到页面顶部有进度条\">\n            <SvgIcon name=\"i-ri:question-line\" />\n          </HTooltip>\n        </div>\n        <HToggle v-model=\"userStore.preferences.app.enableProgress\" />\n      </div>\n      <div class=\"setting-item\">\n        <div class=\"label\">\n          色弱模式\n        </div>\n        <HToggle v-model=\"userStore.preferences.app.enableColorAmblyopiaMode\" />\n      </div>\n    </div>\n    <template #footer>\n      <HButton block @click=\"handleReset\">\n        重置\n      </HButton>\n    </template>\n  </HSlideover>\n</template>\n\n<style scoped>\n.divider {\n  --uno: flex items-center justify-between gap-4 my-4 whitespace-nowrap text-sm font-500;\n\n  &::before,\n  &::after {\n    --uno: content-empty w-full h-1px bg-stone-2 dark-bg-stone-6;\n  }\n}\n\n.themes {\n  --uno: flex flex-wrap items-center justify-center gap-4 pb-4;\n\n  .theme {\n    --uno: flex items-center justify-center w-12 h-12 rounded-2 ring-1 ring-stone-2 dark-ring-stone-7 cursor-pointer transition;\n\n    &.active {\n      --uno: ring-ui-primary ring-2;\n\n      .content {\n        --uno: rotate-0;\n      }\n    }\n\n    .content {\n      --uno: w-6 h-4 rounded-1/2 -rotate-45 transition;\n    }\n  }\n}\n\n.menu-mode {\n  --uno: flex items-center justify-center gap-4 pb-4;\n\n  .mode {\n    --uno: relative w-16 h-12 rounded-2 ring-1 ring-stone-2 dark-ring-stone-7 cursor-pointer transition;\n\n    &.active {\n      --uno: ring-ui-primary ring-2;\n    }\n\n    &::before,\n    &::after,\n    .mode-container {\n      --uno: absolute pointer-events-none;\n    }\n\n    &::before {\n      --uno: content-empty bg-ui-primary;\n    }\n\n    &::after {\n      --uno: content-empty bg-ui-primary/60;\n    }\n\n    .mode-container {\n      --uno: bg-ui-primary/20 border-width-1.5 border-dashed border-ui-primary;\n\n      &::before {\n        --uno: content-empty absolute w-full h-full;\n      }\n    }\n\n    &-side {\n      &::before {\n        --uno: top-2 bottom-2 start-2 w-2 rounded-ss-1 rounded-es-1;\n      }\n\n      &::after {\n        --uno: top-2 bottom-2 start-4.5 w-3;\n      }\n\n      .mode-container {\n        --uno: inset-t-2 inset-e-2 inset-b-2 inset-s-8 rounded-se-1 rounded-ee-1;\n      }\n    }\n\n    &-head {\n      &::before {\n        --uno: top-2 start-2 end-2 h-2 rounded-ss-1 rounded-se-1;\n      }\n\n      &::after {\n        --uno: top-4.5 start-2 bottom-2 w-3 rounded-es-1;\n      }\n\n      .mode-container {\n        --uno: inset-t-4.5 inset-e-2 inset-b-2 inset-s-5.5 rounded-ee-1;\n      }\n    }\n\n    &-single {\n      &::after {\n        --uno: top-2 start-2 bottom-2 w-3 rounded-ss-1 rounded-es-1;\n      }\n\n      .mode-container {\n        --uno: inset-t-2 inset-e-2 inset-b-2 inset-s-5.5 rounded-se-1 rounded-ee-1;\n      }\n    }\n\n    &-only-side {\n      &::before {\n        --uno: top-2 bottom-2 start-2 w-2 rounded-ss-1 rounded-es-1;\n      }\n\n      .mode-container {\n        --uno: inset-t-2 inset-e-2 inset-b-2 inset-s-4.5 rounded-se-1 rounded-ee-1;\n      }\n    }\n\n    &-only-head {\n      &::before {\n        --uno: top-2 start-2 end-2 h-2 rounded-ss-1 rounded-se-1;\n      }\n\n      .mode-container {\n        --uno: inset-t-4.5 inset-e-2 inset-b-2 inset-s-2 rounded-es-1 rounded-ee-1;\n      }\n    }\n\n    &-side-panel {\n      &::before {\n        --uno: top-2 bottom-2 start-2 w-2 rounded-ss-1 rounded-es-1;\n      }\n\n      &::after {\n        --uno: top-4 bottom-4 start-5.5 w-5;\n      }\n\n      .mode-container {\n        --uno: inset-t-2 inset-e-2 inset-b-2 inset-s-4.5 rounded-se-1 rounded-ee-1;\n      }\n    }\n\n    &-head-panel {\n      &::before {\n        --uno: top-2 start-2 end-2 h-2 rounded-ss-1 rounded-se-1;\n      }\n\n      &::after {\n        --uno: top-5.5 bottom-3.5 start-5 w-6;\n      }\n\n      .mode-container {\n        --uno: inset-t-4.5 inset-e-2 inset-b-2 inset-s-2 rounded-es-1 rounded-ee-1;\n      }\n    }\n  }\n}\n\n.app-width-mode {\n  --uno: flex items-center justify-center gap-4 pb-4;\n\n  .mode {\n    --uno: relative w-16 h-12 rounded-2 ring-1 ring-stone-2 dark-ring-stone-7 cursor-pointer transition of-hidden;\n\n    &.active {\n      --uno: ring-ui-primary ring-2;\n    }\n\n    &-adaption {\n      &::before {\n        --uno: content-empty absolute w-full h-full bg-stone-1 dark-bg-stone-9;\n      }\n\n      .left,\n      .right {\n        --uno: absolute top-1/2 -translate-y-1/2;\n      }\n\n      .left {\n        --uno: left-1;\n      }\n\n      .right {\n        --uno: right-1;\n      }\n    }\n\n    &-adaption-min-width {\n      &::before {\n        --uno: content-empty absolute w-1/2 h-full left-1/2 -translate-x-1/2 bg-stone-1 dark-bg-stone-9;\n      }\n\n      .left,\n      .right {\n        --uno: absolute top-1/2 -translate-y-1/2;\n      }\n\n      .left {\n        --uno: left-0.5;\n      }\n\n      .right {\n        --uno: right-0.5;\n      }\n    }\n\n    &-center {\n      &::before {\n        --uno: content-empty absolute w-3/5 h-full left-1/2 -translate-x-1/2 bg-stone-1 dark-bg-stone-9;\n      }\n    }\n\n    &-center-max-width {\n      &::before {\n        --uno: content-empty absolute w-3/5 h-full left-1/2 -translate-x-1/2 bg-stone-1 dark-bg-stone-9;\n      }\n\n      .left,\n      .right {\n        --uno: absolute top-1/2 -translate-y-1/2;\n      }\n\n      .left {\n        --uno: left-2.5;\n      }\n\n      .right {\n        --uno: right-2.5;\n      }\n    }\n  }\n}\n\n.transition-mode {\n  --uno: flex items-center justify-center gap-4 pb-4;\n\n  .mode {\n    --uno: relative flex items-center justify-center w-14 h-10 rounded-2 ring-1 ring-stone-2 dark-ring-stone-7 cursor-pointer;\n\n    &.active {\n      --uno: ring-ui-primary ring-2;\n    }\n\n    &::after {\n      --uno: content-empty absolute w-3/5 h-3/5 top-1/5 left-1/5 rounded-2 bg-stone-2 dark-bg-stone-9 transition;\n    }\n\n    &.mode-fade {\n      &::after {\n        animation: transition-mode-fade-after 1.5s infinite;\n      }\n\n      @keyframes transition-mode-fade-after {\n        0% {\n          opacity: 1;\n        }\n\n        30%,\n        35% {\n          opacity: 0;\n        }\n\n        65% {\n          opacity: 1;\n        }\n      }\n    }\n\n    &.mode-slide-left {\n      &::after {\n        animation: transition-mode-slide-left 1.5s infinite;\n      }\n\n      @keyframes transition-mode-slide-left {\n        0% {\n          opacity: 1;\n        }\n\n        30% {\n          opacity: 0;\n          transform: translate(-30%, 0);\n        }\n\n        35% {\n          opacity: 0;\n          transform: translate(30%, 0);\n        }\n\n        65% {\n          opacity: 1;\n        }\n      }\n    }\n\n    &.mode-slide-right {\n      &::after {\n        animation: transition-mode-slide-right 1.5s infinite;\n      }\n\n      @keyframes transition-mode-slide-right {\n        0% {\n          opacity: 1;\n        }\n\n        30% {\n          opacity: 0;\n          transform: translate(30%, 0);\n        }\n\n        35% {\n          opacity: 0;\n          transform: translate(-30%, 0);\n        }\n\n        100% {\n          opacity: 1;\n        }\n      }\n    }\n\n    &.mode-slide-top {\n      &::after {\n        animation: transition-mode-slide-top 1.5s infinite;\n      }\n\n      @keyframes transition-mode-slide-top {\n        0% {\n          opacity: 1;\n        }\n\n        30% {\n          opacity: 0;\n          transform: translate(0, -30%);\n        }\n\n        35% {\n          opacity: 0;\n          transform: translate(0, 30%);\n        }\n\n        100% {\n          opacity: 1;\n        }\n      }\n    }\n\n    &.mode-slide-bottom {\n      &::after {\n        animation: transition-mode-slide-bottom 1.5s infinite;\n      }\n\n      @keyframes transition-mode-slide-bottom {\n        0% {\n          opacity: 1;\n        }\n\n        30% {\n          opacity: 0;\n          transform: translate(0, 30%);\n        }\n\n        35% {\n          opacity: 0;\n          transform: translate(0, -30%);\n        }\n\n        100% {\n          opacity: 1;\n        }\n      }\n    }\n  }\n}\n\n.setting-item {\n  --uno: flex items-center justify-between gap-4 px-4 py-2 rounded-2 transition hover-bg-stone-1 dark-hover-bg-stone-9;\n\n  .label {\n    --uno: flex items-center flex-shrink-0 gap-2 text-sm;\n\n    i {\n      --uno: text-xl text-orange cursor-help;\n    }\n  }\n}\n</style>\n"],"names":["settingsStore","useSettingsStore","userStore","useUserStore","isShow","ref","themeList","computed","themes","key","item","toolbarLayoutRef","useTemplateRef","watch","val","Sortable","e","onMounted","eventBus","handleReset"],"mappings":"okEAWA,MAAMA,EAAgBC,KAChBC,EAAYC,KAEZC,EAASC,GAAI,EAAK,EAElBC,GAAYC,GAAS,IAClB,OAAO,KAAKC,EAAM,EAAE,IAAKC,IACvB,CACL,MAAOA,EACP,MAAQD,GAAeC,CAAG,CAAA,EAE7B,EAAE,OAAQC,GACFA,EAAK,MAAM,cAAc,IAAMV,EAAc,kBACrD,CACF,EAEKW,EAAmBC,GAAe,kBAAkB,EAC1DC,GAAM,IAAMF,EAAiB,MAAQG,GAAQ,CACvCA,GAEF,IAAIC,GAASD,EAAK,CAChB,UAAW,IACX,WAAY,QACZ,UAAW,aACX,OAAQ,WACR,SAAWE,GAAM,CACXA,EAAE,WAAa,QAAaA,EAAE,WAAa,QACnCd,EAAA,YAAY,SAAWA,EAAU,YAAY,QAAQ,QAAUA,EAAU,YAAY,QAAQ,OAAO,OAAOc,EAAE,SAAU,EAAGd,EAAU,YAAY,QAAQ,OAAO,OAAOc,EAAE,SAAU,CAAC,EAAE,CAAC,CAAC,CAErM,CAAA,CACD,CACH,CACD,EAEDC,GAAU,IAAM,CACLC,GAAA,GAAG,4BAA6B,IAAM,CACtCd,EAAA,MAAQ,CAACA,EAAO,KAAA,CACxB,CAAA,CACF,EAED,eAAee,IAAc,CAC3BjB,EAAU,kBAAkB,EAC5B,SAAS,OAAO,CAClB"}