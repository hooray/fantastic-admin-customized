{"version":3,"file":"tools.vue_vue_type_script_setup_true_lang-AMjq5Lve.js","sources":["../../node_modules/.pnpm/scule@1.3.0/node_modules/scule/dist/index.mjs","../../src/layouts/components/Topbar/Toolbar/tools.vue"],"sourcesContent":["const NUMBER_CHAR_RE = /\\d/;\nconst STR_SPLITTERS = [\"-\", \"_\", \"/\", \".\"];\nfunction isUppercase(char = \"\") {\n  if (NUMBER_CHAR_RE.test(char)) {\n    return void 0;\n  }\n  return char !== char.toLowerCase();\n}\nfunction splitByCase(str, separators) {\n  const splitters = separators ?? STR_SPLITTERS;\n  const parts = [];\n  if (!str || typeof str !== \"string\") {\n    return parts;\n  }\n  let buff = \"\";\n  let previousUpper;\n  let previousSplitter;\n  for (const char of str) {\n    const isSplitter = splitters.includes(char);\n    if (isSplitter === true) {\n      parts.push(buff);\n      buff = \"\";\n      previousUpper = void 0;\n      continue;\n    }\n    const isUpper = isUppercase(char);\n    if (previousSplitter === false) {\n      if (previousUpper === false && isUpper === true) {\n        parts.push(buff);\n        buff = char;\n        previousUpper = isUpper;\n        continue;\n      }\n      if (previousUpper === true && isUpper === false && buff.length > 1) {\n        const lastChar = buff.at(-1);\n        parts.push(buff.slice(0, Math.max(0, buff.length - 1)));\n        buff = lastChar + char;\n        previousUpper = isUpper;\n        continue;\n      }\n    }\n    buff += char;\n    previousUpper = isUpper;\n    previousSplitter = isSplitter;\n  }\n  parts.push(buff);\n  return parts;\n}\nfunction upperFirst(str) {\n  return str ? str[0].toUpperCase() + str.slice(1) : \"\";\n}\nfunction lowerFirst(str) {\n  return str ? str[0].toLowerCase() + str.slice(1) : \"\";\n}\nfunction pascalCase(str, opts) {\n  return str ? (Array.isArray(str) ? str : splitByCase(str)).map((p) => upperFirst(opts?.normalize ? p.toLowerCase() : p)).join(\"\") : \"\";\n}\nfunction camelCase(str, opts) {\n  return lowerFirst(pascalCase(str || \"\", opts));\n}\nfunction kebabCase(str, joiner) {\n  return str ? (Array.isArray(str) ? str : splitByCase(str)).map((p) => p.toLowerCase()).join(joiner ?? \"-\") : \"\";\n}\nfunction snakeCase(str) {\n  return kebabCase(str || \"\", \"_\");\n}\nfunction flatCase(str) {\n  return kebabCase(str || \"\", \"\");\n}\nfunction trainCase(str, opts) {\n  return (Array.isArray(str) ? str : splitByCase(str)).filter(Boolean).map((p) => upperFirst(opts?.normalize ? p.toLowerCase() : p)).join(\"-\");\n}\nconst titleCaseExceptions = /^(a|an|and|as|at|but|by|for|if|in|is|nor|of|on|or|the|to|with)$/i;\nfunction titleCase(str, opts) {\n  return (Array.isArray(str) ? str : splitByCase(str)).filter(Boolean).map(\n    (p) => titleCaseExceptions.test(p) ? p.toLowerCase() : upperFirst(opts?.normalize ? p.toLowerCase() : p)\n  ).join(\" \");\n}\n\nexport { camelCase, flatCase, isUppercase, kebabCase, lowerFirst, pascalCase, snakeCase, splitByCase, titleCase, trainCase, upperFirst };\n","<script setup lang=\"ts\">\nimport type { Settings } from '#/global'\nimport useSettingsStore from '@/store/modules/settings'\nimport { pascalCase } from 'scule'\n\ndefineOptions({\n  name: 'ToolbarTools',\n})\n\nconst props = defineProps<{\n  mode: 'left-side' | 'right-side'\n}>()\n\nconst modules = import.meta.glob('./*/index.vue', { import: 'default', eager: true })\n\nconst settingsStore = useSettingsStore()\n\nconst tools = computed(() => {\n  const index = settingsStore.settings.toolbar.layout.findIndex(item => item === '->')\n  const tools: Exclude<keyof Settings.toolbar, 'layout'>[] = []\n  if (props.mode === 'left-side') {\n    settingsStore.settings.toolbar.layout.forEach((item, i) => {\n      if (i < index && item !== '->') {\n        tools.push(item)\n      }\n    })\n  }\n  else {\n    settingsStore.settings.toolbar.layout.forEach((item, i) => {\n      if (i > index && item !== '->') {\n        tools.push(item)\n      }\n    })\n  }\n  return tools\n})\n</script>\n\n<template>\n  <template v-for=\"item in tools\" :key=\"item\">\n    <Component :is=\"modules[`./${pascalCase(item)}/index.vue`]\" v-if=\"settingsStore.settings.toolbar[item]\" />\n  </template>\n</template>\n"],"names":["NUMBER_CHAR_RE","STR_SPLITTERS","isUppercase","char","splitByCase","str","separators","splitters","parts","buff","previousUpper","previousSplitter","isSplitter","isUpper","lastChar","upperFirst","pascalCase","opts","p","props","__props","modules","__vite_glob_0_0","__vite_glob_0_1","__vite_glob_0_2","__vite_glob_0_3","__vite_glob_0_4","__vite_glob_0_5","__vite_glob_0_6","__vite_glob_0_7","settingsStore","useSettingsStore","tools","computed","index","item","i"],"mappings":"0iBAAA,MAAMA,EAAiB,KACjBC,EAAgB,CAAC,IAAK,IAAK,IAAK,GAAG,EACzC,SAASC,EAAYC,EAAO,GAAI,CAC9B,GAAI,CAAAH,EAAe,KAAKG,CAAI,EAG5B,OAAOA,IAASA,EAAK,aACvB,CACA,SAASC,EAAYC,EAAKC,EAAY,CACpC,MAAMC,EAA0BN,EAC1BO,EAAQ,CAAA,EACd,GAAI,CAACH,GAAO,OAAOA,GAAQ,SACzB,OAAOG,EAET,IAAIC,EAAO,GACPC,EACAC,EACJ,UAAWR,KAAQE,EAAK,CACtB,MAAMO,EAAaL,EAAU,SAASJ,CAAI,EAC1C,GAAIS,IAAe,GAAM,CACvBJ,EAAM,KAAKC,CAAI,EACfA,EAAO,GACPC,EAAgB,OAChB,QACD,CACD,MAAMG,EAAUX,EAAYC,CAAI,EAChC,GAAIQ,IAAqB,GAAO,CAC9B,GAAID,IAAkB,IAASG,IAAY,GAAM,CAC/CL,EAAM,KAAKC,CAAI,EACfA,EAAON,EACPO,EAAgBG,EAChB,QACD,CACD,GAAIH,IAAkB,IAAQG,IAAY,IAASJ,EAAK,OAAS,EAAG,CAClE,MAAMK,EAAWL,EAAK,GAAG,EAAE,EAC3BD,EAAM,KAAKC,EAAK,MAAM,EAAG,KAAK,IAAI,EAAGA,EAAK,OAAS,CAAC,CAAC,CAAC,EACtDA,EAAOK,EAAWX,EAClBO,EAAgBG,EAChB,QACD,CACF,CACDJ,GAAQN,EACRO,EAAgBG,EAChBF,EAAmBC,CACpB,CACD,OAAAJ,EAAM,KAAKC,CAAI,EACRD,CACT,CACA,SAASO,EAAWV,EAAK,CACvB,OAAOA,EAAMA,EAAI,CAAC,EAAE,cAAgBA,EAAI,MAAM,CAAC,EAAI,EACrD,CAIA,SAASW,EAAWX,EAAKY,EAAM,CAC7B,OAAOZ,GAAO,MAAM,QAAQA,CAAG,EAAIA,EAAMD,EAAYC,CAAG,GAAG,IAAKa,GAAMH,EAAWE,GAAA,MAAAA,EAAM,UAAYC,EAAE,YAAa,EAAGA,CAAC,CAAC,EAAE,KAAK,EAAE,EAAI,EACtI,wEC/CA,MAAMC,EAAQC,EAIRC,EAAU,OAAA,OAAA,CAAA,yBAAAC,EAAA,0BAAAC,EAAA,wBAAAC,EAAA,yBAAAC,EAAA,mBAAAC,EAAA,wBAAAC,EAAA,2BAAAC,EAAA,yBAAAC,CAAA,CAAA,EAEVC,EAAgBC,IAEhBC,EAAQC,EAAS,IAAM,CACrB,MAAAC,EAAQJ,EAAc,SAAS,QAAQ,OAAO,UAAUK,GAAQA,IAAS,IAAI,EAC7EH,EAAqD,CAAA,EACvD,OAAAb,EAAM,OAAS,YACjBW,EAAc,SAAS,QAAQ,OAAO,QAAQ,CAACK,EAAMC,IAAM,CACrDA,EAAIF,GAASC,IAAS,MACxBH,EAAM,KAAKG,CAAI,CACjB,CACD,EAGDL,EAAc,SAAS,QAAQ,OAAO,QAAQ,CAACK,EAAMC,IAAM,CACrDA,EAAIF,GAASC,IAAS,MACxBH,EAAM,KAAKG,CAAI,CACjB,CACD,EAEIH,CAAA,CACR","x_google_ignoreList":[0]}