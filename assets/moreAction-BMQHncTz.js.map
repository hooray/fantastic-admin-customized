{"version":3,"file":"moreAction-BMQHncTz.js","sources":["../../src/layouts/components/Topbar/Tabbar/moreAction.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport type { Tabbar } from '#/global'\nimport useSettingsStore from '@/store/modules/settings'\nimport useTabbarStore from '@/store/modules/tabbar'\nimport eventBus from '@/utils/eventBus'\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-vue'\nimport Sortable from 'sortablejs'\nimport { useI18n } from 'vue-i18n'\n\ndefineOptions({\n  name: 'TabbarMoreAction',\n})\n\nconst router = useRouter()\n\nconst settingsStore = useSettingsStore()\nconst tabbarStore = useTabbarStore()\n\nconst tabbar = useTabbar()\n\nconst { t } = useI18n()\nconst { generateI18nTitle } = useMenu()\n\nconst activedTabId = computed(() => tabbar.getId())\n\nconst dropdownTabContainerRef = useTemplateRef('dropdownTabContainerRef')\n\nconst isDragging = ref(false)\nwatch(() => dropdownTabContainerRef.value, (val) => {\n  if (val) {\n    // eslint-disable-next-line no-new\n    new Sortable(val.$el, {\n      animation: 200,\n      ghostClass: 'ghost',\n      draggable: '.tab',\n      onStart: () => {\n        isDragging.value = true\n      },\n      onEnd: () => {\n        isDragging.value = false\n      },\n      onMove: (e) => {\n        return e.dragged.classList.contains('pinned') ? e.related.classList.contains('pinned') : !e.related.classList.contains('pinned')\n      },\n      onUpdate: (e) => {\n        if (e.newIndex !== undefined && e.oldIndex !== undefined) {\n          tabbarStore.sort(e.newIndex, e.oldIndex)\n        }\n      },\n    })\n  }\n})\n\nfunction actionCommand(command: 'search-tabs' | 'other-side' | 'left-side' | 'right-side') {\n  switch (command) {\n    case 'search-tabs':\n      eventBus.emit('global-search-toggle', 'tab')\n      break\n    case 'other-side':\n      tabbar.closeOtherSide()\n      break\n    case 'left-side':\n      tabbar.closeLeftSide()\n      break\n    case 'right-side':\n      tabbar.closeRightSide()\n      break\n  }\n}\n\nfunction iconName(isActive: boolean, icon: Tabbar.recordRaw['icon'], activeIcon: Tabbar.recordRaw['activeIcon']) {\n  let name\n  if ((!isActive && icon) || (isActive && !activeIcon)) {\n    name = icon\n  }\n  else if (isActive && activeIcon) {\n    name = activeIcon\n  }\n  return name\n}\n</script>\n\n<template>\n  <div>\n    <HDropdown placement=\"bottom-end\" popper-class=\"tabbar-dropdown\">\n      <div class=\"h-6 w-6 flex-center cursor-pointer rounded-1 bg-[var(--g-container-bg)] text-lg shadow transition-background-color transition-shadow\">\n        <SvgIcon name=\"i-ri:arrow-down-s-fill\" />\n      </div>\n      <template #dropdown>\n        <div class=\"quick-button\">\n          <button v-if=\"settingsStore.settings.toolbar.navSearch\" class=\"button\" @click=\"actionCommand('search-tabs')\">\n            <HTooltip :text=\"t('app.tabbar.searchTabs')\">\n              <SvgIcon name=\"i-ri:search-line\" />\n            </HTooltip>\n          </button>\n          <button class=\"button\" :disabled=\"!tabbar.checkCloseOtherSide()\" @click=\"actionCommand('other-side')\">\n            <HTooltip :text=\"t('app.tabbar.closeOtherSide')\">\n              <SvgIcon name=\"i-ri:close-fill\" />\n            </HTooltip>\n          </button>\n          <button class=\"button\" :disabled=\"!tabbar.checkCloseLeftSide()\" @click=\"actionCommand('left-side')\">\n            <HTooltip :text=\"t('app.tabbar.closeLeftSide')\">\n              <SvgIcon name=\"i-ph:arrow-line-left\" />\n            </HTooltip>\n          </button>\n          <button class=\"button\" :disabled=\"!tabbar.checkCloseRightSide()\" @click=\"actionCommand('right-side')\">\n            <HTooltip :text=\"t('app.tabbar.closeRightSide')\">\n              <SvgIcon name=\"i-ph:arrow-line-right\" />\n            </HTooltip>\n          </button>\n        </div>\n        <OverlayScrollbarsComponent :options=\"{ scrollbars: { autoHide: 'leave', autoHideDelay: 300 } }\" defer class=\"max-h-[300px]\">\n          <TransitionGroup ref=\"dropdownTabContainerRef\" :name=\"!isDragging ? 'dropdown-tab' : undefined\" tag=\"div\" class=\"tabs\" :class=\"{ dragging: isDragging }\">\n            <div\n              v-for=\"element in tabbarStore.list\" :key=\"element.tabId\" class=\"tab\" :class=\"{\n                actived: element.tabId === activedTabId,\n                pinned: element.isPermanent || element.isPin,\n              }\"\n            >\n              <div :key=\"element.tabId\" class=\"title\" :title=\"element.customTitleList.find(item => item.fullPath === element.fullPath)?.title || generateI18nTitle(element.title)\" @click=\"router.push(element.fullPath)\">\n                <SvgIcon v-if=\"settingsStore.settings.tabbar.enableIcon && iconName(element.tabId === activedTabId, element.icon, element.activeIcon)\" :name=\"iconName(element.tabId === activedTabId, element.icon, element.activeIcon)!\" />\n                {{ element.customTitleList.find(item => item.fullPath === element.fullPath)?.title || generateI18nTitle(element.title) }}\n              </div>\n              <div v-if=\"!element.isPermanent && element.isPin\" class=\"action-icon\" @click.stop=\"tabbarStore.unPin(element.tabId)\" @dblclick.stop>\n                <SvgIcon name=\"i-ri:pushpin-2-fill\" />\n              </div>\n              <div v-else-if=\"!element.isPermanent && tabbarStore.list.length > 1\" class=\"action-icon\" @click.stop=\"tabbar.closeById(element.tabId)\" @dblclick.stop>\n                <SvgIcon name=\"i-ri:close-fill\" />\n              </div>\n            </div>\n          </TransitionGroup>\n        </OverlayScrollbarsComponent>\n      </template>\n    </HDropdown>\n  </div>\n</template>\n\n<style scoped>\n.tabbar-dropdown {\n  .quick-button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 15px 15px 10px;\n\n    .button {\n      --uno: transition-colors;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 32px;\n      height: 32px;\n      cursor: pointer;\n      background-color: var(--g-bg);\n      border: none;\n      border-radius: 5px;\n      outline: none;\n\n      &:hover:not(:disabled) {\n        --uno: text-ui-primary;\n      }\n\n      &:disabled {\n        cursor: not-allowed;\n      }\n\n      i {\n        font-size: 16px !important;\n      }\n    }\n  }\n\n  .tabs {\n    width: 200px;\n    padding: 0 0 10px;\n\n    &:not(.dragging) {\n      .tab:hover {\n        &:not(.actived) {\n          background-color: var(--g-bg);\n        }\n\n        .action-icon {\n          opacity: 1;\n        }\n      }\n    }\n\n    .tab {\n      position: relative;\n      width: calc(100% - 30px);\n      height: 30px;\n      padding: 0 5px;\n      margin: 0 15px;\n      background-color: var(--g-container-bg);\n      border-radius: 5px;\n      transition: background-color 0.3s;\n\n      &.actived {\n        background-color: var(--g-bg);\n      }\n\n      &.ghost {\n        opacity: 0;\n      }\n\n      &:hover {\n        .title {\n          --uno: opacity-100;\n\n          margin-inline-end: 20px;\n          mask-image: linear-gradient(to right, #000 calc(100% - 44px), transparent);\n\n          [dir=\"rtl\"] & {\n            mask-image: linear-gradient(to left, #000 calc(100% - 44px), transparent);\n          }\n        }\n      }\n\n      * {\n        user-select: none;\n      }\n\n      .title {\n        --uno: opacity-70 transition;\n\n        position: relative;\n        display: flex;\n        gap: 5px;\n        align-items: center;\n        height: 100%;\n        overflow: hidden;\n        font-size: 14px;\n        white-space: nowrap;\n        cursor: pointer;\n        mask-image: linear-gradient(to right, #000 calc(100% - 24px), transparent);\n\n        [dir=\"rtl\"] & {\n          mask-image: linear-gradient(to left, #000 calc(100% - 24px), transparent);\n        }\n\n        i {\n          flex-shrink: 0;\n          font-size: 16px;\n        }\n      }\n\n      .action-icon {\n        --uno: transition;\n\n        position: absolute;\n        inset-inline-end: 0.5em;\n        top: 50%;\n        z-index: 10;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 1.5em;\n        height: 1.5em;\n        font-size: 12px;\n        color: var(--g-tabbar-tab-color);\n        border-radius: 50%;\n        opacity: 0;\n        transform: translateY(-50%);\n\n        &:hover {\n          --uno: ring-1 ring-stone-3 dark-ring-stone-7;\n\n          background-color: var(--g-bg);\n        }\n      }\n    }\n  }\n}\n\n.dropdown-tab-enter-from,\n.dropdown-tab-leave-to {\n  opacity: 0;\n  transform: translateX(-100%);\n}\n\n.dropdown-tab-enter-active {\n  transition: all 0.3s;\n}\n\n.dropdown-tab-leave-active {\n  position: absolute !important;\n  transition: all 0.3s;\n}\n\n.dropdown-tab-move {\n  transition: transform 0.3s;\n}\n</style>\n"],"names":["router","useRouter","settingsStore","useSettingsStore","tabbarStore","useTabbarStore","tabbar","useTabbar","t","useI18n","generateI18nTitle","useMenu","activedTabId","computed","dropdownTabContainerRef","useTemplateRef","isDragging","ref","watch","val","Sortable","e","actionCommand","command","eventBus","iconName","isActive","icon","activeIcon","name"],"mappings":"ixBAaA,MAAMA,EAASC,IAETC,EAAgBC,IAChBC,EAAcC,IAEdC,EAASC,IAET,CAAE,EAAAC,GAAMC,IACR,CAAE,kBAAAC,GAAsBC,IAExBC,EAAeC,EAAS,IAAMP,EAAO,MAAO,CAAA,EAE5CQ,EAA0BC,EAAe,yBAAyB,EAElEC,EAAaC,EAAI,EAAK,EAC5BC,EAAM,IAAMJ,EAAwB,MAAQK,GAAQ,CAC9CA,GAEE,IAAAC,EAASD,EAAI,IAAK,CACpB,UAAW,IACX,WAAY,QACZ,UAAW,OACX,QAAS,IAAM,CACbH,EAAW,MAAQ,EACrB,EACA,MAAO,IAAM,CACXA,EAAW,MAAQ,EACrB,EACA,OAASK,GACAA,EAAE,QAAQ,UAAU,SAAS,QAAQ,EAAIA,EAAE,QAAQ,UAAU,SAAS,QAAQ,EAAI,CAACA,EAAE,QAAQ,UAAU,SAAS,QAAQ,EAEjI,SAAWA,GAAM,CACXA,EAAE,WAAa,QAAaA,EAAE,WAAa,QAC7CjB,EAAY,KAAKiB,EAAE,SAAUA,EAAE,QAAQ,CAE3C,CAAA,CACD,CACH,CACD,EAED,SAASC,EAAcC,EAAoE,CACzF,OAAQA,EAAS,CACf,IAAK,cACMC,EAAA,KAAK,uBAAwB,KAAK,EAC3C,MACF,IAAK,aACHlB,EAAO,eAAe,EACtB,MACF,IAAK,YACHA,EAAO,cAAc,EACrB,MACF,IAAK,aACHA,EAAO,eAAe,EACtB,KACJ,CACF,CAES,SAAAmB,EAASC,EAAmBC,EAAgCC,EAA4C,CAC3G,IAAAC,EACJ,MAAK,CAACH,GAAYC,GAAUD,GAAY,CAACE,EAChCC,EAAAF,EAEAD,GAAYE,IACZC,EAAAD,GAEFC,CACT"}